plugins {
    id 'groovy'
    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '0.12.0'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id "com.github.sherter.google-java-format" version '0.8'
}


version = file('src/main/resources/VERSION').text.trim()

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

sourceSets {
    integTest
}

configurations {
    bundle
    compile.extendsFrom bundle
    integTestCompile.extendsFrom testCompile
}

dependencies {
    implementation gradleApi()
    bundle(project(':format')) {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    bundle              'com.google.guava:guava:28.0-jre'
    bundle              'com.google.dagger:dagger:2.23.2'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.23.2'
    annotationProcessor 'com.google.auto.value:auto-value:1.6.5'
    compileOnly         'com.google.auto.value:auto-value-annotations:1.6.5'

    testImplementation('org.spockframework:spock-core:1.3-groovy-2.5') {
        exclude group: 'org.codehaus.groovy'
    }
    testImplementation 'com.google.jimfs:jimfs:1.1'

    integTestImplementation project(':test')
    integTestImplementation gradleTestKit()
    integTestImplementation('org.spockframework:spock-core:1.3-groovy-2.5') {
        exclude group: 'org.codehaus.groovy'
    }
    integTestImplementation sourceSets.main.output
}

def integTestGradleVersion = System.getenv('GRADLE_VERSION') ?: '2.6'

tasks.register("integrationTest", Test) {
    dependsOn publishToMavenLocal
    group 'Verification'
    testClassesDirs = sourceSets.integTest.output.classesDirs
    classpath = sourceSets.integTest.runtimeClasspath
    systemProperty 'GRADLE_VERSION', integTestGradleVersion
    reports.html.destination = new File(reportsDir, 'integrationTest' + File.separator + integTestGradleVersion)
    mustRunAfter tasks.named("test")
}

tasks.named("check").configure {
    dependsOn integrationTest
}


tasks.shadowJar {
  classifier = null // necessary for com.gradle.plugin-publish to pick this artifact up
  configurations = [project.configurations.bundle]
  relocate('dagger', 'com.github.sherter.googlejavaformat.dagger')
  relocate('com.google.common', 'com.github.sherter.googlejavaformatgradleplugin.com.google.common')
  exclude('META-INF/maven/**/*')
}
// removes the dependsOn relation between "publishPlugins" and "jar" and forces
// the correct (the shadowed) artifact to be uploaded to the plugin portal
configurations.archives.artifacts.clear()
artifacts {
  archives tasks.shadowJar
}

pluginBundle {
    website = 'https://github.com/sherter/google-java-format-gradle-plugin'
    vcsUrl = 'https://github.com/sherter/google-java-format-gradle-plugin.git'
    description = 'Format your Java source files with google-java-format'
    tags = ['java', 'format', 'style']

    plugins {
        googleJavaFormatGradlePlugin {
            id = 'com.github.sherter.google-java-format'
            displayName = 'google-java-format gradle plugin'
        }
    }

    withDependencies { List<Dependency> list ->
        list.clear()
    }
}

publishing {
    repositories{
        maven {
            name = 'Jfrog'
            url System.getenv("ARTIFACT_MAVEN_REPO")
            credentials {
                username System.getenv("ARTIFACTORY_USER")
                password System.getenv("ARTIFACTORY_PASSWORD")
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId 'com.tinder.labs'
            artifactId 'google-java-format-gradle-plugin'

            project.shadow.component(it)
        }
    }
}
